% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/serializer.R
\name{serializer_headers}
\alias{serializer_headers}
\alias{serializer_content_type}
\alias{serializer_csv}
\alias{serializer_html}
\alias{serializer_json}
\alias{serializer_unboxed_json}
\alias{serializer_rds}
\alias{serializer_yaml}
\alias{serializer_text}
\alias{serializer_format}
\alias{serializer_print}
\alias{serializer_cat}
\alias{serializer_htmlwidget}
\title{Plumber Serializers}
\usage{
serializer_headers(headers = list(), serialize_fn = identity)

serializer_content_type(type, serialize_fn = identity)

serializer_csv(...)

serializer_html()

serializer_json(...)

serializer_unboxed_json(auto_unbox = TRUE, ...)

serializer_rds(version = "2", ascii = FALSE, ...)

serializer_yaml(...)

serializer_text(..., serialize_fn = as.character)

serializer_format(...)

serializer_print(...)

serializer_cat(...)

serializer_htmlwidget(...)
}
\arguments{
\item{headers}{\code{list()} of headers to add to the response object}

\item{serialize_fn}{Function to serialize the data. The result object will be converted to a character string. Ex: \code{\link[jsonlite:fromJSON]{jsonlite::toJSON()}}.}

\item{type}{The value to provide for the \code{Content-Type} HTTP header.}

\item{...}{extra arguments supplied to respective internal serialization function.}

\item{auto_unbox}{automatically \code{\link[jsonlite]{unbox}} all atomic vectors of length 1. It is usually safer to avoid this and instead use the \code{\link[jsonlite]{unbox}} function to unbox individual elements.
An exception is that objects of class \code{AsIs} (i.e. wrapped in \code{I()}) are not automatically unboxed. This is a way to mark single values as length-1 arrays.}

\item{version}{the workspace format version to use.  \code{NULL}
    specifies the current default version (3). The only other supported
    value is 2, the default from \R 1.4.0 to \R 3.5.0.}

\item{ascii}{a logical.  If \code{TRUE} or \code{NA}, an ASCII
    representation is written; otherwise (default) a binary one.
    See also the comments in the help for \code{\link[base]{save}}.}
}
\description{
Serializers are used in Plumber to transform the R object produced by a
filter/endpoint into an HTTP response that can be returned to the client. See
\href{https://book.rplumber.io/articles/rendering-output.html#serializers-1}{here} for
more details on Plumber serializers and how to customize their behavior.
}
\section{Functions}{
\itemize{
\item \code{serializer_headers}: Add a static list of headers to each return value. Will add \code{Content-Disposition} header if a value is the result of \code{as_attachment()}.

\item \code{serializer_content_type}: Adds a \code{Content-Type} header to the response object

\item \code{serializer_csv}: CSV serializer. See \code{\link[readr:format_delim]{readr::format_csv()}} for more details.

\item \code{serializer_html}: HTML serializer

\item \code{serializer_json}: JSON serializer. See \code{\link[jsonlite:fromJSON]{jsonlite::toJSON()}} for more details.

\item \code{serializer_unboxed_json}: JSON serializer with \code{auto_unbox} defaulting to \code{TRUE}. See \code{\link[jsonlite:fromJSON]{jsonlite::toJSON()}} for more details.

\item \code{serializer_rds}: RDS serializer. See \code{\link[=serialize]{serialize()}} for more details.

\item \code{serializer_yaml}: YAML serializer. See \code{\link[yaml:as.yaml]{yaml::as.yaml()}} for more details.

\item \code{serializer_text}: Text serializer. See \code{\link[=as.character]{as.character()}} for more details.

\item \code{serializer_format}: Text serializer. See \code{\link[=format]{format()}} for more details.

\item \code{serializer_print}: Text serializer. Captures the output of \code{\link[=print]{print()}}

\item \code{serializer_cat}: Text serializer. Captures the output of \code{\link[=cat]{cat()}}

\item \code{serializer_htmlwidget}: htmlwidget serializer. See \code{\link[htmlwidgets:saveWidget]{htmlwidgets::saveWidget()}} for more details.
}}

