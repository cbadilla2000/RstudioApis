% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options_plumber.R
\name{options}
\alias{options}
\alias{options_plumber}
\title{plumber Options}
\usage{
options_plumber(
  ...,
  port = getOption("plumber.port"),
  docs = getOption("plumber.docs"),
  docs.callback = getOption("plumber.docs.callback"),
  trailingSlash = getOption("plumber.trailingSlash"),
  methodNotAllowed = getOption("plumber.methodNotAllowed"),
  apiURL = getOption("plumber.apiURL"),
  apiScheme = getOption("plumber.apiScheme"),
  apiHost = getOption("plumber.apiHost"),
  apiPort = getOption("plumber.apiPort"),
  apiPath = getOption("plumber.apiPath"),
  maxRequestSize = getOption("plumber.maxRequestSize"),
  sharedSecret = getOption("plumber.sharedSecret"),
  legacyRedirects = getOption("plumber.legacyRedirects")
)
}
\arguments{
\item{...}{Ignored. Should be empty}

\item{port, docs, docs.callback, trailingSlash, methodNotAllowed, apiScheme, apiHost, apiPort, apiPath, apiURL, maxRequestSize, sharedSecret, legacyRedirects}{See Options.}
}
\value{
Invisibly an options list from \code{options::opts(env = "plumber")}.
}
\description{
Internally used, package-specific options. All options will prioritize R options() values, and fall back to environment variables if undefined. If neither the option nor the environment variable is set, a default value is used.

Options that change behaviors can be set globally with
\code{\link[base:options]{options}}, \code{\link[plumber:options_plumber]{options_plumber}}
or with environment variables.
}
\section{Checking Option Values}{

Option values specific to \code{plumber} can be
accessed by passing the package name to \code{env}.

\if{html}{\out{<div class="sourceCode">}}\preformatted{options::opts(env = "plumber")

options::opt(x, default, env = "plumber")
}\if{html}{\out{</div>}}
}

\section{Options}{

\describe{
\item{apiURL}{\describe{
Server urls for OpenAPI Specification respecting pattern \verb{scheme://host:port/path}. Other \verb{api*} options will be ignored when set.\item{default: }{\preformatted{NULL}}
\item{option: }{plumber.apiURL}
\item{envvar: }{PLUMBER_APIURL (evaluated if possible, raw string otherwise)}
}}

\item{methodNotAllowed}{\describe{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}} Logical value which allows the router to notify that an unavailable method was requested, but a different request method is allowed. For example, if set to \code{TRUE} and the GET route \verb{/test} existed, then a POST request of \verb{/test} would receive a 405 status and the allowed methods.\item{default: }{\preformatted{TRUE}}
\item{option: }{plumber.methodNotAllowed}
\item{envvar: }{PLUMBER_METHODNOTALLOWED (TRUE if one of 'TRUE', '1', FALSE otherwise)}
}}

\item{trailingSlash}{\describe{
Logical value which allows the router to redirect any request that has a matching route with a trailing slash. For example, if set to \code{TRUE} and the GET route \verb{/test/} existed, then a GET request of \verb{/test?a=1} would redirect to \verb{/test/?a=1}. This option will default to \code{TRUE} in a future release.\item{default: }{\preformatted{FALSE}}
\item{option: }{plumber.trailingSlash}
\item{envvar: }{PLUMBER_TRAILINGSLASH (TRUE if one of 'TRUE', '1', FALSE otherwise)}
}}

\item{apiPath}{\describe{
Path used to build OpenAPI url and server url for OpenAPI Specification.\item{default: }{\preformatted{character()}}
\item{option: }{plumber.apiPath}
\item{envvar: }{PLUMBER_APIPATH (evaluated if possible, raw string otherwise)}
}}

\item{apiPort}{\describe{
Port used to build OpenAPI url and server url for OpenAPI Specification. Defaults to \code{port} defined by \code{run} method when used inside a running router.\item{default: }{\preformatted{character()}}
\item{option: }{plumber.apiPort}
\item{envvar: }{PLUMBER_APIPORT (evaluated if possible, raw string otherwise)}
}}

\item{legacyRedirects}{\describe{
Plumber will redirect legacy route \verb{/__swagger__/} and \verb{/__swagger__/index.html} to \verb{../__docs__/} and \verb{../__docs__/index.html}. You can disable this behavior by setting this option to \code{FALSE}.\item{default: }{\preformatted{TRUE}}
\item{option: }{plumber.legacyRedirects}
\item{envvar: }{PLUMBER_LEGACYREDIRECTS (TRUE if one of 'TRUE', '1', FALSE otherwise)}
}}

\item{sharedSecret}{\describe{
Shared secret used to filter incoming request. When \code{NULL}, secret is not validated. Otherwise, Plumber compares secret with http header \code{PLUMBER_SHARED_SECRET}. Failure to match results in http error 400.\item{default: }{\preformatted{NULL}}
\item{option: }{plumber.sharedSecret}
\item{envvar: }{PLUMBER_SHAREDSECRET (evaluated if possible, raw string otherwise)}
}}

\item{maxRequestSize}{\describe{
Maximum length in bytes of request body. Body larger than maximum are rejected with http error 413. \code{0} means unlimited size. Defaults to \code{0}.\item{default: }{\preformatted{0}}
\item{option: }{plumber.maxRequestSize}
\item{envvar: }{PLUMBER_MAXREQUESTSIZE (evaluated if possible, raw string otherwise)}
}}

\item{docs}{\describe{
Name of the visual documentation interface to use. Default \code{TRUE} is the same as \code{"swagger"}.\item{default: }{\preformatted{TRUE}}
\item{option: }{plumber.docs}
\item{envvar: }{PLUMBER_DOCS (evaluated if possible, raw string otherwise)}
}}

\item{apiScheme}{\describe{
Scheme used to build OpenAPI url and server url for OpenAPI Specification.\item{default: }{\preformatted{"http"}}
\item{option: }{plumber.apiScheme}
\item{envvar: }{PLUMBER_APISCHEME (evaluated if possible, raw string otherwise)}
}}

\item{docs.callback}{\describe{
A function. Called with a single parameter corresponding to the visual documentation url after Plumber server is ready. This can be used by RStudio to open the docs when then API is ran from the editor.\item{default: }{\preformatted{NULL}}
\item{option: }{plumber.docs.callback}
\item{envvar: }{PLUMBER_DOCS_CALLBACK (evaluated if possible, raw string otherwise)}
}}

\item{port}{\describe{
Port Plumber will attempt to use to start http server. If the port is already in use, server will not be able to start.\item{default: }{\preformatted{NULL}}
\item{option: }{plumber.port}
\item{envvar: }{PLUMBER_PORT (evaluated if possible, raw string otherwise)}
}}

\item{apiHost}{\describe{
Host used to build docs url and server url for OpenAPI Specification. Defaults to \code{host} defined by \code{run} method when used inside a running router.\item{default: }{\preformatted{character()}}
\item{option: }{plumber.apiHost}
\item{envvar: }{PLUMBER_APIHOST (evaluated if possible, raw string otherwise)}
}}

}
}

\seealso{
options getOption Sys.getenv Sys.getenv
}
\keyword{internal}
