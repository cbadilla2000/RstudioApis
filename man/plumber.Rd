% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plumber.R
\name{plumb}
\alias{plumb}
\alias{plumber}
\title{Plumber Router}
\usage{
plumb(file, dir = ".")
}
\description{
Routers are the core request handler in plumber. A router is responsible for
taking an incoming request, submitting it through the appropriate filters and
eventually to a corresponding endpoint, if one is found.
}
\details{
See \url{http://www.rplumber.io/docs/programmatic/} for additional
details on the methods available on this object.
}
\section{Super class}{
\code{\link[plumber:hookable]{plumber::hookable}} -> \code{plumber}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{plumber$new()}}
\item \href{#method-run}{\code{plumber$run()}}
\item \href{#method-mount}{\code{plumber$mount()}}
\item \href{#method-registerHook}{\code{plumber$registerHook()}}
\item \href{#method-handle}{\code{plumber$handle()}}
\item \href{#method-print}{\code{plumber$print()}}
\item \href{#method-serve}{\code{plumber$serve()}}
\item \href{#method-route}{\code{plumber$route()}}
\item \href{#method-call}{\code{plumber$call()}}
\item \href{#method-onHeaders}{\code{plumber$onHeaders()}}
\item \href{#method-onWSOpen}{\code{plumber$onWSOpen()}}
\item \href{#method-setSerializer}{\code{plumber$setSerializer()}}
\item \href{#method-set404Handler}{\code{plumber$set404Handler()}}
\item \href{#method-setErrorHandler}{\code{plumber$setErrorHandler()}}
\item \href{#method-filter}{\code{plumber$filter()}}
\item \href{#method-swaggerFile}{\code{plumber$swaggerFile()}}
\item \href{#method-openAPIFile}{\code{plumber$openAPIFile()}}
\item \href{#method-addEndpoint}{\code{plumber$addEndpoint()}}
\item \href{#method-addAssets}{\code{plumber$addAssets()}}
\item \href{#method-addFilter}{\code{plumber$addFilter()}}
\item \href{#method-addGlobalProcessor}{\code{plumber$addGlobalProcessor()}}
\item \href{#method-clone}{\code{plumber$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="hookable" data-id="registerHooks">}\href{../../plumber/html/hookable.html#method-registerHooks}{\code{plumber::hookable$registerHooks()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$new(file = NULL, filters = defaultPlumberFilters, envir)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file}}{The file to parse as the plumber router definition}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\if{latex}{\out{\hypertarget{method-run}{}}}
\subsection{Method \code{run()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$run(
  host = "127.0.0.1",
  port = getOption("plumber.port"),
  swagger = interactive(),
  debug = interactive(),
  swaggerCallback = getOption("plumber.swagger.url", NULL)
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mount"></a>}}
\if{latex}{\out{\hypertarget{method-mount}{}}}
\subsection{Method \code{mount()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$mount(path, router)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-registerHook"></a>}}
\if{latex}{\out{\hypertarget{method-registerHook}{}}}
\subsection{Method \code{registerHook()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$registerHook(
  stage = c("preroute", "postroute", "preserialize", "postserialize", "exit"),
  handler
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-handle"></a>}}
\if{latex}{\out{\hypertarget{method-handle}{}}}
\subsection{Method \code{handle()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$handle(methods, path, handler, preempt, serializer, endpoint, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$print(prefix = "", topLevel = TRUE, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-serve"></a>}}
\if{latex}{\out{\hypertarget{method-serve}{}}}
\subsection{Method \code{serve()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$serve(req, res)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-route"></a>}}
\if{latex}{\out{\hypertarget{method-route}{}}}
\subsection{Method \code{route()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$route(req, res)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-call"></a>}}
\if{latex}{\out{\hypertarget{method-call}{}}}
\subsection{Method \code{call()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$call(req)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-onHeaders"></a>}}
\if{latex}{\out{\hypertarget{method-onHeaders}{}}}
\subsection{Method \code{onHeaders()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$onHeaders(req)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-onWSOpen"></a>}}
\if{latex}{\out{\hypertarget{method-onWSOpen}{}}}
\subsection{Method \code{onWSOpen()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$onWSOpen(ws)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setSerializer"></a>}}
\if{latex}{\out{\hypertarget{method-setSerializer}{}}}
\subsection{Method \code{setSerializer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$setSerializer(serializer)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set404Handler"></a>}}
\if{latex}{\out{\hypertarget{method-set404Handler}{}}}
\subsection{Method \code{set404Handler()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$set404Handler(fun)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setErrorHandler"></a>}}
\if{latex}{\out{\hypertarget{method-setErrorHandler}{}}}
\subsection{Method \code{setErrorHandler()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$setErrorHandler(fun)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filter"></a>}}
\if{latex}{\out{\hypertarget{method-filter}{}}}
\subsection{Method \code{filter()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$filter(name, expr, serializer)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-swaggerFile"></a>}}
\if{latex}{\out{\hypertarget{method-swaggerFile}{}}}
\subsection{Method \code{swaggerFile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$swaggerFile()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-openAPIFile"></a>}}
\if{latex}{\out{\hypertarget{method-openAPIFile}{}}}
\subsection{Method \code{openAPIFile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$openAPIFile()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addEndpoint"></a>}}
\if{latex}{\out{\hypertarget{method-addEndpoint}{}}}
\subsection{Method \code{addEndpoint()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$addEndpoint(
  verbs,
  path,
  expr,
  serializer,
  processors,
  preempt = NULL,
  params = NULL,
  comments
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addAssets"></a>}}
\if{latex}{\out{\hypertarget{method-addAssets}{}}}
\subsection{Method \code{addAssets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$addAssets(dir, path = "/public", options = list())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dir}}{The directory containing the \code{plumber.R} file to parse as the
plumber router definition. Alternatively, if an \code{entrypoint.R} file is
found, it will take precedence and be responsible for returning a runnable
Plumber router.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addFilter"></a>}}
\if{latex}{\out{\hypertarget{method-addFilter}{}}}
\subsection{Method \code{addFilter()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$addFilter(name, expr, serializer, processors)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addGlobalProcessor"></a>}}
\if{latex}{\out{\hypertarget{method-addGlobalProcessor}{}}}
\subsection{Method \code{addGlobalProcessor()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$addGlobalProcessor(proc)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{plumber$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
